{"mappings":"A,I,E,A,C,E,C,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,U,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,G,I,E,E,SC0CA,EAtC0B,KACxB,GAAK,OAAO,qBAAqB,CAE/B,GAAI,CACF,IAAM,EAAc,OAAO,qBAAqB,CAC1C,EAAW,EAAY,QAAQ,CAErC,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,MAAM,CAAC,CAChB,iBAAkB,CAChB,GAAI,EAAY,EAAE,CAAC,QAAQ,GAC3B,MAAO,WAAW,EAAY,KAAK,EACnC,IAAK,WAAW,EAAY,GAAG,GAAK,EACpC,SAAU,WAAW,EAAY,YAAY,GAAK,EAClD,KAAM,MACN,MAAO,MACP,QAAS,MACT,SAAU,MACV,MAAO,EAAS,GAAG,CAAC,AAAC,IACnB,GAAM,CAAA,QAAE,CAAO,CAAA,UAAE,CAAS,CAAA,cAAE,CAAa,CAAA,MAAE,CAAK,CAAA,SAAE,CAAQ,CAAE,CAAG,EAC/D,MAAO,CACL,QAAS,EAAY,EAAE,CAAC,QAAQ,GAChC,UAAW,EAAQ,QAAQ,GAC3B,IAAK,EAAQ,QAAQ,GACrB,KAAO,AAAA,CAAA,GAAa,KAAA,EAAO,QAAQ,GACnC,SAAW,AAAA,CAAA,GAAiB,KAAA,EAAO,QAAQ,GAC3C,UAAW,WAAW,GAAS,GAC/B,SAAU,SAAS,GAAY,GAC/B,SAAU,KACZ,CACF,EACF,CACF,EACF,CAAE,MAAO,EAAO,CAEhB,CAEJ,C","sources":["<anon>","src/shared/environment-data-sources/lightspeed.ts"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire07df\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"8djPr\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $dc9bfb4a5b55d82c$export$2e2bcd8739ae039; });\n\nvar $2hYdk = parcelRequire(\"2hYdk\");\nconst $dc9bfb4a5b55d82c$var$lightspeedTracker = ()=>{\n    if (!window.lightspeedTransaction) return;\n    else try {\n        const transaction = window.lightspeedTransaction;\n        const products = transaction.products;\n        (0, $2hYdk.default).notify({\n            transactionEvent: {\n                id: transaction.id.toString(),\n                total: parseFloat(transaction.total),\n                tax: parseFloat(transaction.tax) || 0,\n                shipping: parseFloat(transaction.delivery_fee) || 0,\n                city: \"N/A\",\n                state: \"N/A\",\n                country: \"USA\",\n                currency: \"USD\",\n                items: products.map((product)=>{\n                    const { item_id: item_id, item_name: item_name, item_category: item_category, price: price, quantity: quantity } = product;\n                    return {\n                        orderId: transaction.id.toString(),\n                        productId: item_id.toString(),\n                        sku: item_id.toString(),\n                        name: (item_name || \"N/A\").toString(),\n                        category: (item_category || \"N/A\").toString(),\n                        unitPrice: parseFloat(price || 0),\n                        quantity: parseInt(quantity || 1),\n                        currency: \"USD\"\n                    };\n                })\n            }\n        });\n    } catch (error) {\n    // window.tracker('trackError', JSON.stringify(error), 'LIGHTSPEED');\n    }\n};\nvar $dc9bfb4a5b55d82c$export$2e2bcd8739ae039 = $dc9bfb4a5b55d82c$var$lightspeedTracker;\n\n});\n\n})();\n//# sourceMappingURL=lightspeed.12b57680.js.map\n","import observable from \"src/shared/utils/create-events-observable\";\n\nimport { TransactionCartItem } from \"../types\";\n\nconst lightspeedTracker = () => {\n  if (!window.lightspeedTransaction) return;\n  else {\n    try {\n      const transaction = window.lightspeedTransaction;\n      const products = transaction.products;\n\n      observable.notify({\n        transactionEvent: {\n          id: transaction.id.toString(),\n          total: parseFloat(transaction.total),\n          tax: parseFloat(transaction.tax) || 0,\n          shipping: parseFloat(transaction.delivery_fee) || 0,\n          city: \"N/A\",\n          state: \"N/A\",\n          country: \"USA\",\n          currency: \"USD\",\n          items: products.map((product) => {\n            const { item_id, item_name, item_category, price, quantity } = product;\n            return {\n              orderId: transaction.id.toString(),\n              productId: item_id.toString(),\n              sku: item_id.toString(),\n              name: (item_name || \"N/A\").toString(),\n              category: (item_category || \"N/A\").toString(),\n              unitPrice: parseFloat(price || 0),\n              quantity: parseInt(quantity || 1),\n              currency: \"USD\",\n            } as TransactionCartItem;\n          }),\n        },\n      });\n    } catch (error) {\n      // window.tracker('trackError', JSON.stringify(error), 'LIGHTSPEED');\n    }\n  }\n};\n\nexport default lightspeedTracker;\n"],"names":["parcelRequire","parcelRegister","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","get","$dc9bfb4a5b55d82c$export$2e2bcd8739ae039","set","s","enumerable","configurable","$2hYdk","lightspeedTransaction","transaction","products","default","notify","transactionEvent","id","toString","total","parseFloat","tax","shipping","delivery_fee","city","state","country","currency","items","map","product","item_id","item_name","item_category","price","quantity","orderId","productId","sku","name","category","unitPrice","parseInt","error"],"version":3,"file":"lightspeed.12b57680.js.map"}