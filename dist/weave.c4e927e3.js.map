{"mappings":"A,I,E,A,C,E,C,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,U,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,G,I,E,E,SCyCA,EApCwB,KACtB,GAAI,CACF,SAAS,gBAAgB,CAAC,wBAAyB,AAAC,IAClD,IAAM,EAAO,EAAM,MAAM,CAAC,KAAK,CAC/B,GAAI,AAA4B,iBAA5B,EAAM,MAAM,CAAC,UAAU,CAAqB,CAC9C,IAAM,EAAW,EAAK,KAAK,CAE3B,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,MAAM,CAAC,CAChB,iBAAkB,CAChB,GAAI,EAAK,QAAQ,CAAC,QAAQ,GAC1B,MAAO,EAAK,KAAK,CAAC,KAAK,CAAG,IAC1B,IAAK,EAAK,KAAK,CAAC,GAAG,CAAG,KAAO,EAC7B,SAAU,EACV,KAAM,MACN,MAAO,MACP,QAAS,MACT,SAAU,MACV,MAAO,EAAS,GAAG,CAAC,AAAC,GACZ,CAAA,CACL,QAAS,EAAK,QAAQ,CAAC,QAAQ,GAC/B,UAAW,EAAQ,EAAE,CAAC,QAAQ,GAC9B,IAAK,EAAQ,EAAE,CAAC,QAAQ,GACxB,KAAM,EAAQ,IAAI,CAAC,QAAQ,GAC3B,SAAU,EAAQ,QAAQ,CAAC,QAAQ,GACnC,UAAW,EAAQ,KAAK,CAAG,KAAO,EAClC,SAAU,EAAQ,QAAQ,CAAG,KAAQ,EACrC,SAAU,KACZ,CAAA,EAEJ,CACF,EACF,CACF,EACF,CAAE,MAAA,EAAM,CAAC,CACX,C","sources":["<anon>","src/shared/environment-data-sources/weave.ts"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire07df\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"tCnJp\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $9b3dd42e6bc5a794$export$2e2bcd8739ae039; });\n\nvar $2hYdk = parcelRequire(\"2hYdk\");\nconst $9b3dd42e6bc5a794$var$weaveDataSource = ()=>{\n    try {\n        document.addEventListener(\"weave-analytics-event\", (event)=>{\n            const data = event.detail.event;\n            if (event.detail.event_name === \"order_submit\") {\n                const products = data.items;\n                (0, $2hYdk.default).notify({\n                    transactionEvent: {\n                        id: data.order_id.toString(),\n                        total: data.total.total / 100,\n                        tax: data.total.tax / 100 || 0,\n                        shipping: 0,\n                        city: \"N/A\",\n                        state: \"N/A\",\n                        country: \"N/A\",\n                        currency: \"USD\",\n                        items: products.map((product)=>{\n                            return {\n                                orderId: data.order_id.toString(),\n                                productId: product.id.toString(),\n                                sku: product.id.toString(),\n                                name: product.name.toString(),\n                                category: product.category.toString(),\n                                unitPrice: product.price / 100 || 0,\n                                quantity: product.quantity / 1000 || 1,\n                                currency: \"USD\"\n                            };\n                        })\n                    }\n                });\n            }\n        });\n    } catch (e) {}\n};\nvar $9b3dd42e6bc5a794$export$2e2bcd8739ae039 = $9b3dd42e6bc5a794$var$weaveDataSource;\n\n});\n\n})();\n//# sourceMappingURL=weave.c4e927e3.js.map\n","import logger from \"src/shared/logger\";\nimport observable from \"src/shared/utils/create-events-observable\";\n\nimport { EnvironmentEvents, TransactionCartItem } from \"../types\";\n\nconst weaveDataSource = () => {\n  try {\n    document.addEventListener(\"weave-analytics-event\", (event: any) => {\n      const data = event.detail.event;\n      if (event.detail.event_name === \"order_submit\") {\n        const products = data.items;\n\n        observable.notify({\n          transactionEvent: {\n            id: data.order_id.toString(),\n            total: data.total.total / 100,\n            tax: data.total.tax / 100 || 0,\n            shipping: 0,\n            city: \"N/A\",\n            state: \"N/A\",\n            country: \"N/A\",\n            currency: \"USD\",\n            items: products.map((product: any) => {\n              return {\n                orderId: data.order_id.toString(),\n                productId: product.id.toString(),\n                sku: product.id.toString(),\n                name: product.name.toString(),\n                category: product.category.toString(),\n                unitPrice: product.price / 100 || 0,\n                quantity: product.quantity / 1000 || 1,\n                currency: \"USD\",\n              } as TransactionCartItem;\n            }),\n          },\n        });\n      }\n    });\n  } catch {}\n};\n\nexport default weaveDataSource;\n"],"names":["parcelRequire","parcelRegister","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","get","$9b3dd42e6bc5a794$export$2e2bcd8739ae039","set","s","enumerable","configurable","$2hYdk","document","addEventListener","event","data","detail","event_name","products","items","default","notify","transactionEvent","id","order_id","toString","total","tax","shipping","city","state","country","currency","map","product","orderId","productId","sku","name","category","unitPrice","price","quantity","e"],"version":3,"file":"weave.c4e927e3.js.map"}