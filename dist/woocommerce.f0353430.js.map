{"mappings":"C,A,W,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,U,W,O,C,G,I,E,E,S,E,E,SC+CA,EA1C8B,KAC5B,GAAI,AAAC,OAAO,gBAAgB,EAAK,OAAO,gBAAgB,CAIxD,GAAI,CACF,IAAM,EAAc,AAAA,CAAA,EAAA,EAAA,kBAAiB,AAAjB,EAAmB,OAAO,gBAAgB,EACxD,EAAW,AAAA,CAAA,EAAA,EAAA,kBAAiB,AAAjB,EAAmB,OAAO,gBAAgB,EACrD,EAAQ,EAAY,OAAO,CAAC,KAAK,EAAI,MAE3C,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,MAAM,CAAC,CAChB,iBAAkB,CAChB,GAAI,AAAC,CAAA,EAAY,EAAE,EAAI,EAAY,cAAa,AAAb,EAAgB,QAAQ,GAC3D,MAAO,WAAW,EAAY,KAAK,EACnC,IAAK,WAAW,EAAY,SAAS,EAAI,GACzC,SAAU,WAAW,EAAY,cAAc,EAAI,GACnD,KAAM,AAAC,CAAA,EAAY,OAAO,CAAC,IAAI,EAAI,KAAA,EAAO,QAAQ,GAClD,MAAO,AAAC,CAAA,EAAY,OAAO,CAAC,KAAK,EAAI,KAAA,EAAO,QAAQ,GACpD,QAAS,AAAC,CAAA,EAAY,OAAO,CAAC,OAAO,EAAI,KAAA,EAAO,QAAQ,GACxD,SAAW,AAAA,CAAA,EAAY,QAAQ,EAAI,KAAA,EAAO,QAAQ,GAClD,OAAQ,EACR,MAAO,EAAS,GAAG,CAAC,AAAC,IACnB,GAAM,CAAA,SAAE,CAAQ,CAAA,KAAE,CAAI,CAAA,WAAE,CAAU,CAAA,MAAE,CAAK,CAAA,SAAE,CAAQ,CAAE,CAAG,EAClD,EAAuB,WAAW,GAAS,EAEjD,MAAO,CACL,QAAU,AAAA,CAAA,EAAY,EAAE,EAAI,CAAA,EAAU,QAAQ,GAC9C,IAAK,EAAW,QAAQ,GACxB,KAAO,AAAA,CAAA,GAAQ,KAAA,EAAO,QAAQ,GAC9B,SAAU,MACV,UAAW,EACX,SAAU,SAAS,GAAY,GAC/B,SAAW,AAAA,CAAA,EAAY,QAAQ,EAAI,KAAA,EAAO,QAAQ,EACpD,CACF,EACF,CACF,EACF,CAAE,MAAO,EAAO,CAEhB,CACF,C,G,E,Q,S,C,C,C,E,E,E,O,C,qB,W,O,C,GC7CO,IAAM,EAAqB,AAAC,IACjC,GAAI,CACF,GAAI,AAAiB,UAAjB,OAAO,EACT,OAAO,EAET,GAAI,AAAiB,UAAjB,OAAO,EACT,OAAO,KAAK,KAAK,CAAC,EAEtB,CAAE,MAAO,EAAG,CACV,QAAQ,KAAK,CAAC,uBAAwB,EACxC,CAEA,OAAO,CACT,C,E","sources":["<anon>","src/shared/environment-data-sources/woocommerce.ts","src/shared/utils/try-parse-json.ts"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire07df\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"4LSXO\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $6380d2989ec014a0$export$2e2bcd8739ae039; });\n\nvar $2hYdk = parcelRequire(\"2hYdk\");\n\nvar $gDdCy = parcelRequire(\"gDdCy\");\nconst $6380d2989ec014a0$var$woocommerceDataSource = ()=>{\n    if (!window.transactionOrder && !window.transactionItems) return;\n    try {\n        const transaction = (0, $gDdCy.tryParseJSONObject)(window.transactionOrder);\n        const products = (0, $gDdCy.tryParseJSONObject)(window.transactionItems);\n        const email = transaction.billing.email || \"N/A\";\n        (0, $2hYdk.default).notify({\n            transactionEvent: {\n                id: (transaction.id || transaction.transaction_id).toString(),\n                total: parseFloat(transaction.total),\n                tax: parseFloat(transaction.total_tax || 0),\n                shipping: parseFloat(transaction.shipping_total || 0),\n                city: (transaction.billing.city || \"N/A\").toString(),\n                state: (transaction.billing.state || \"N/A\").toString(),\n                country: (transaction.billing.country || \"N/A\").toString(),\n                currency: (transaction.currency || \"USD\").toString(),\n                userId: email,\n                items: products.map((product)=>{\n                    const { order_id: order_id, name: name, product_id: product_id, total: total, quantity: quantity } = product;\n                    const transactionItemTotal = parseFloat(total) / quantity;\n                    return {\n                        orderId: (transaction.id || order_id).toString(),\n                        sku: product_id.toString(),\n                        name: (name || \"N/A\").toString(),\n                        category: \"N/A\",\n                        unitPrice: transactionItemTotal,\n                        quantity: parseInt(quantity || 1),\n                        currency: (transaction.currency || \"USD\").toString()\n                    };\n                })\n            }\n        });\n    } catch (error) {\n    // window.tracker('trackError', JSON.stringify(error), 'WOOCOMMERCE');\n    }\n};\nvar $6380d2989ec014a0$export$2e2bcd8739ae039 = $6380d2989ec014a0$var$woocommerceDataSource;\n\n});\nparcelRegister(\"gDdCy\", function(module, exports) {\n\n$parcel$export(module.exports, \"tryParseJSONObject\", function () { return $3314a60fcd51e41f$export$8b0f5bf83db88e; });\nconst $3314a60fcd51e41f$export$8b0f5bf83db88e = (event)=>{\n    try {\n        if (typeof event === \"object\") return event;\n        if (typeof event === \"string\") return JSON.parse(event);\n    } catch (e) {\n        console.error(\"Error parsing event:\", e);\n    }\n    return event;\n};\n\n});\n\n\n})();\n//# sourceMappingURL=woocommerce.f0353430.js.map\n","import observable from \"src/shared/utils/create-events-observable\";\n\nimport { TransactionCartItem } from \"../types\";\nimport { tryParseJSONObject } from \"../utils/try-parse-json\";\n\nconst woocommerceDataSource = () => {\n  if (!window.transactionOrder && !window.transactionItems) {\n    return;\n  }\n\n  try {\n    const transaction = tryParseJSONObject(window.transactionOrder);\n    const products = tryParseJSONObject(window.transactionItems);\n    const email = transaction.billing.email || \"N/A\";\n\n    observable.notify({\n      transactionEvent: {\n        id: (transaction.id || transaction.transaction_id).toString(),\n        total: parseFloat(transaction.total),\n        tax: parseFloat(transaction.total_tax || 0),\n        shipping: parseFloat(transaction.shipping_total || 0),\n        city: (transaction.billing.city || \"N/A\").toString(),\n        state: (transaction.billing.state || \"N/A\").toString(),\n        country: (transaction.billing.country || \"N/A\").toString(),\n        currency: (transaction.currency || \"USD\").toString(),\n        userId: email,\n        items: products.map((product) => {\n          const { order_id, name, product_id, total, quantity } = product;\n          const transactionItemTotal = parseFloat(total) / quantity;\n\n          return {\n            orderId: (transaction.id || order_id).toString(),\n            sku: product_id.toString(),\n            name: (name || \"N/A\").toString(),\n            category: \"N/A\", // No Category Field for WooCommerce in transactionItems\n            unitPrice: transactionItemTotal,\n            quantity: parseInt(quantity || 1),\n            currency: (transaction.currency || \"USD\").toString(),\n          } as TransactionCartItem;\n        }),\n      },\n    });\n  } catch (error) {\n    // window.tracker('trackError', JSON.stringify(error), 'WOOCOMMERCE');\n  }\n};\n\nexport default woocommerceDataSource;\n","export const tryParseJSONObject = (event: string | object): string | object | any => {\n  try {\n    if (typeof event === \"object\") {\n      return event;\n    }\n    if (typeof event === \"string\") {\n      return JSON.parse(event);\n    }\n  } catch (e) {\n    console.error(\"Error parsing event:\", e);\n  }\n\n  return event;\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","$6380d2989ec014a0$export$2e2bcd8739ae039","$2hYdk","$gDdCy","transactionOrder","transactionItems","transaction","tryParseJSONObject","products","email","billing","default","notify","transactionEvent","id","transaction_id","toString","total","parseFloat","tax","total_tax","shipping","shipping_total","city","state","country","currency","userId","items","map","product","order_id","name","product_id","quantity","transactionItemTotal","orderId","sku","category","unitPrice","parseInt","error","$3314a60fcd51e41f$export$8b0f5bf83db88e","event","JSON","parse","console"],"version":3,"file":"woocommerce.f0353430.js.map"}