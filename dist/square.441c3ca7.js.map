{"mappings":"A,I,E,A,C,E,C,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,U,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,G,I,E,E,S,E,E,SC0CA,EArCyB,KACvB,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,AAAC,IACf,GAAI,AAAY,aAAZ,CAAI,CAAC,EAAE,CACT,GAAI,CACF,IAAM,EAAY,CAAI,CAAC,EAAE,CACzB,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,MAAM,CAAC,CAChB,iBAAkB,CAChB,GAAI,EAAU,cAAc,CAC5B,MAAO,WAAW,EAAU,KAAK,EACjC,IAAK,WAAW,EAAU,GAAG,EAC7B,KAAM,MACN,QAAS,MACT,SAAU,MACV,SAAU,EACV,MAAO,MACP,MAAO,EAAU,KAAK,CAAC,GAAG,CAAC,AAAC,IAC1B,GAAM,CAAA,KAAE,CAAI,CAAA,MAAE,CAAK,CAAA,SAAE,CAAQ,CAAE,CAAG,EAElC,MAAO,CACL,QAAS,EAAU,cAAc,CACjC,SAAU,MACV,SAAU,MACV,KAAA,EACA,SAAA,EACA,IAAK,EAAK,IAAI,CACd,UAAW,WAAW,EACxB,CACF,EACF,CACF,EACF,CAAE,MAAO,EAAO,CAEhB,CAEJ,EACF,C","sources":["<anon>","src/shared/environment-data-sources/square.ts"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire07df\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"j1Yqi\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $d7fb38fd1193e6da$export$2e2bcd8739ae039; });\n\nvar $2hYdk = parcelRequire(\"2hYdk\");\n\nvar $3tZSl = parcelRequire(\"3tZSl\");\nconst $d7fb38fd1193e6da$var$squareDataSource = ()=>{\n    (0, $3tZSl.datalayerSource)((data)=>{\n        if (data[1] === \"purchase\") try {\n            const ecommerce = data[2];\n            (0, $2hYdk.default).notify({\n                transactionEvent: {\n                    id: ecommerce.transaction_id,\n                    total: parseFloat(ecommerce.value),\n                    tax: parseFloat(ecommerce.tax),\n                    city: \"N/A\",\n                    country: \"USA\",\n                    currency: \"USD\",\n                    shipping: 0,\n                    state: \"N/A\",\n                    items: ecommerce.items.map((item)=>{\n                        const { name: name, price: price, quantity: quantity } = item;\n                        return {\n                            orderId: ecommerce.transaction_id,\n                            category: \"N/A\",\n                            currency: \"USD\",\n                            name: name,\n                            quantity: quantity,\n                            sku: item.name,\n                            unitPrice: parseFloat(price)\n                        };\n                    })\n                }\n            });\n        } catch (error) {\n        // window.tracker(\"trackError\", JSON.stringify(error), \"SQUARE\");\n        }\n    });\n};\nvar $d7fb38fd1193e6da$export$2e2bcd8739ae039 = $d7fb38fd1193e6da$var$squareDataSource;\n\n});\n\n})();\n//# sourceMappingURL=square.441c3ca7.js.map\n","import observable from \"src/shared/utils/create-events-observable\";\n\nimport { datalayerSource } from \"../sources/google-datalayer-source\";\nimport { TransactionCartItem } from \"../types\";\n\nconst squareDataSource = () => {\n  datalayerSource((data: any): void => {\n    if (data[1] === \"purchase\") {\n      try {\n        const ecommerce = data[2];\n        observable.notify({\n          transactionEvent: {\n            id: ecommerce.transaction_id,\n            total: parseFloat(ecommerce.value),\n            tax: parseFloat(ecommerce.tax),\n            city: \"N/A\",\n            country: \"USA\",\n            currency: \"USD\",\n            shipping: 0,\n            state: \"N/A\",\n            items: ecommerce.items.map((item: any) => {\n              const { name, price, quantity } = item;\n\n              return {\n                orderId: ecommerce.transaction_id,\n                category: \"N/A\",\n                currency: \"USD\",\n                name,\n                quantity,\n                sku: item.name, // Id is not passed in the data layer\n                unitPrice: parseFloat(price),\n              } as TransactionCartItem;\n            }),\n          },\n        });\n      } catch (error) {\n        // window.tracker(\"trackError\", JSON.stringify(error), \"SQUARE\");\n      }\n    }\n  });\n};\n\nexport default squareDataSource;\n"],"names":["parcelRequire","parcelRegister","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","get","$d7fb38fd1193e6da$export$2e2bcd8739ae039","set","s","enumerable","configurable","$2hYdk","$3tZSl","datalayerSource","data","ecommerce","default","notify","transactionEvent","id","transaction_id","total","parseFloat","value","tax","city","country","currency","shipping","state","items","map","item","name","price","quantity","orderId","category","sku","unitPrice","error"],"version":3,"file":"square.441c3ca7.js.map"}