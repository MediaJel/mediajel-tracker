{"mappings":"A,I,E,A,C,E,C,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,U,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,G,I,E,E,S,E,E,SCgFA,EA1EoB,KAClB,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,AAAC,IACf,IAAM,EAAiB,CAAI,CAAC,EAAE,CAC9B,GAAI,AAAe,gBAAf,EAAK,KAAK,EAAsB,AAAmB,gBAAnB,EAAkC,CAEpE,GAAM,CAAA,GAAE,CAAE,CAAA,KAAE,CAAI,CAAA,MAAE,CAAK,CAAA,SAAE,CAAQ,CAAA,SAAE,CAAQ,CAAE,CAAG,AAD/B,CAAA,EAAK,KAAK,EAAI,CAAI,CAAC,EAAE,CAAC,KAAK,AAAL,CACiB,CAAC,EAAE,CAE3D,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,MAAM,CAAC,CAChB,eAAgB,CACd,IAAK,EAAG,QAAQ,GAChB,KAAO,AAAA,CAAA,GAAQ,KAAA,EAAO,QAAQ,GAC9B,SAAW,AAAA,CAAA,GAAY,KAAA,EAAO,QAAQ,GACtC,UAAW,WAAW,GAAS,GAC/B,SAAU,SAAS,GAAY,GAC/B,SAAU,KACZ,CACF,EACF,CAEA,GAAI,AAAe,qBAAf,EAAK,KAAK,EAA2B,AAAmB,qBAAnB,EAAuC,CAE9E,GAAM,CAAA,GAAE,CAAE,CAAA,KAAE,CAAI,CAAA,MAAE,CAAK,CAAA,SAAE,CAAQ,CAAA,SAAE,CAAQ,CAAE,CAAG,AAD/B,CAAA,EAAK,KAAK,EAAI,CAAI,CAAC,EAAE,CAAC,KAAK,AAAL,CACiB,CAAC,EAAE,CAE3D,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,MAAM,CAAC,CAChB,oBAAqB,CACnB,IAAK,EAAG,QAAQ,GAChB,KAAO,AAAA,CAAA,GAAQ,KAAA,EAAO,QAAQ,GAC9B,SAAW,AAAA,CAAA,GAAY,KAAA,EAAO,QAAQ,GACtC,UAAW,WAAW,GAAS,GAC/B,SAAU,SAAS,GAAY,GAC/B,SAAU,KACZ,CACF,EACF,CAEA,GAAI,AAAe,aAAf,EAAK,KAAK,EAAmB,AAAmB,aAAnB,EAE/B,GAAI,CACF,IAAM,EAAiB,EAAK,cAAc,EAAI,CAAI,CAAC,EAAE,CAAC,cAAc,CAC9D,EAAoB,EAAK,KAAK,EAAI,CAAI,CAAC,EAAE,CAAC,KAAK,CAC/C,EAAW,EAAK,KAAK,EAAI,CAAI,CAAC,EAAE,CAAC,KAAK,CAE5C,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,MAAM,CAAC,CAChB,iBAAkB,CAChB,GAAI,EAAe,QAAQ,GAC3B,MAAO,WAAW,GAClB,IAAK,EACL,SAAU,EACV,KAAM,MACN,MAAO,MACP,QAAS,MACT,SAAU,MACV,MAAO,EAAS,GAAG,CAAC,AAAC,IACnB,GAAM,CAAA,QAAE,CAAO,CAAA,UAAE,CAAS,CAAA,cAAE,CAAa,CAAA,MAAE,CAAK,CAAA,SAAE,CAAQ,CAAE,CAAG,EAC/D,MAAO,CACL,QAAS,EAAe,QAAQ,GAChC,UAAW,EAAQ,QAAQ,GAC3B,IAAK,EAAQ,QAAQ,GACrB,KAAO,AAAA,CAAA,GAAa,KAAA,EAAO,QAAQ,GACnC,SAAW,AAAA,CAAA,GAAiB,KAAA,EAAO,QAAQ,GAC3C,UAAW,WAAW,GAAS,GAC/B,SAAU,SAAS,GAAY,GAC/B,SAAU,KACZ,CACF,EACF,CACF,EACF,CAAE,MAAO,EAAO,CAEhB,CAEJ,EACF,C","sources":["<anon>","src/shared/environment-data-sources/olla.ts"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire07df\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"3ZPLq\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $10b0d55fb918e923$export$2e2bcd8739ae039; });\n\nvar $2hYdk = parcelRequire(\"2hYdk\");\n\nvar $3tZSl = parcelRequire(\"3tZSl\");\nconst $10b0d55fb918e923$var$ollaTracker = ()=>{\n    (0, $3tZSl.datalayerSource)((data)=>{\n        const dataLayerEvent = data[1];\n        if (data.event === \"add_to_cart\" || dataLayerEvent === \"add_to_cart\") {\n            const products = data.items || data[2].items; // data.items is at array index 2\n            const { id: id, name: name, price: price, quantity: quantity, category: category } = products[0];\n            (0, $2hYdk.default).notify({\n                addToCartEvent: {\n                    sku: id.toString(),\n                    name: (name || \"N/A\").toString(),\n                    category: (category || \"N/A\").toString(),\n                    unitPrice: parseFloat(price || 0),\n                    quantity: parseInt(quantity || 1),\n                    currency: \"USD\"\n                }\n            });\n        }\n        if (data.event === \"remove_from_cart\" || dataLayerEvent === \"remove_from_cart\") {\n            const products = data.items || data[2].items; // data.items is at array index 2\n            const { id: id, name: name, price: price, quantity: quantity, category: category } = products[0];\n            (0, $2hYdk.default).notify({\n                removeFromCartEvent: {\n                    sku: id.toString(),\n                    name: (name || \"N/A\").toString(),\n                    category: (category || \"N/A\").toString(),\n                    unitPrice: parseFloat(price || 0),\n                    quantity: parseInt(quantity || 1),\n                    currency: \"USD\"\n                }\n            });\n        }\n        if (data.event === \"purchase\" || dataLayerEvent === \"purchase\") // all ecommerce information is at array index 2\n        try {\n            const transaction_id = data.transaction_id || data[2].transaction_id;\n            const transaction_total = data.value || data[2].value;\n            const products = data.items || data[2].items;\n            (0, $2hYdk.default).notify({\n                transactionEvent: {\n                    id: transaction_id.toString(),\n                    total: parseFloat(transaction_total),\n                    tax: 0,\n                    shipping: 0,\n                    city: \"N/A\",\n                    state: \"N/A\",\n                    country: \"USA\",\n                    currency: \"USD\",\n                    items: products.map((product)=>{\n                        const { item_id: item_id, item_name: item_name, item_category: item_category, price: price, quantity: quantity } = product;\n                        return {\n                            orderId: transaction_id.toString(),\n                            productId: item_id.toString(),\n                            sku: item_id.toString(),\n                            name: (item_name || \"N/A\").toString(),\n                            category: (item_category || \"N/A\").toString(),\n                            unitPrice: parseFloat(price || 0),\n                            quantity: parseInt(quantity || 1),\n                            currency: \"USD\"\n                        };\n                    })\n                }\n            });\n        } catch (error) {\n        // window.tracker('trackError', JSON.stringify(error), 'OLLA');\n        }\n    });\n};\nvar $10b0d55fb918e923$export$2e2bcd8739ae039 = $10b0d55fb918e923$var$ollaTracker;\n\n});\n\n})();\n//# sourceMappingURL=olla.21fabde1.js.map\n","\nimport observable from 'src/shared/utils/create-events-observable';\n\nimport { datalayerSource } from '../sources/google-datalayer-source';\nimport { TransactionCartItem } from '../types';\n\nconst ollaTracker = () => {\n  datalayerSource((data: any): void => {\n    const dataLayerEvent = data[1];\n    if (data.event === \"add_to_cart\" || dataLayerEvent === \"add_to_cart\") {\n      const products = data.items || data[2].items; // data.items is at array index 2\n      const { id, name, price, quantity, category } = products[0];\n\n      observable.notify({\n        addToCartEvent: {\n          sku: id.toString(),\n          name: (name || \"N/A\").toString(),\n          category: (category || \"N/A\").toString(),\n          unitPrice: parseFloat(price || 0),\n          quantity: parseInt(quantity || 1),\n          currency: \"USD\",\n        },\n      });\n    }\n\n    if (data.event === \"remove_from_cart\" || dataLayerEvent === \"remove_from_cart\") {\n      const products = data.items || data[2].items; // data.items is at array index 2\n      const { id, name, price, quantity, category } = products[0];\n\n      observable.notify({\n        removeFromCartEvent: {\n          sku: id.toString(),\n          name: (name || \"N/A\").toString(),\n          category: (category || \"N/A\").toString(),\n          unitPrice: parseFloat(price || 0),\n          quantity: parseInt(quantity || 1),\n          currency: \"USD\",\n        },\n      });\n    }\n\n    if (data.event === \"purchase\" || dataLayerEvent === \"purchase\") {\n      // all ecommerce information is at array index 2\n      try {\n        const transaction_id = data.transaction_id || data[2].transaction_id;\n        const transaction_total = data.value || data[2].value;\n        const products = data.items || data[2].items;\n\n        observable.notify({\n          transactionEvent: {\n            id: transaction_id.toString(),\n            total: parseFloat(transaction_total),\n            tax: 0,\n            shipping: 0,\n            city: \"N/A\",\n            state: \"N/A\",\n            country: \"USA\",\n            currency: \"USD\",\n            items: products.map((product) => {\n              const { item_id, item_name, item_category, price, quantity } = product;\n              return {\n                orderId: transaction_id.toString(),\n                productId: item_id.toString(),\n                sku: item_id.toString(),\n                name: (item_name || \"N/A\").toString(),\n                category: (item_category || \"N/A\").toString(),\n                unitPrice: parseFloat(price || 0),\n                quantity: parseInt(quantity || 1),\n                currency: \"USD\",\n              } as TransactionCartItem;\n            }),\n          },\n        });\n      } catch (error) {\n        // window.tracker('trackError', JSON.stringify(error), 'OLLA');\n      }\n    }\n  });\n};\n\nexport default ollaTracker;\n"],"names":["parcelRequire","parcelRegister","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","get","$10b0d55fb918e923$export$2e2bcd8739ae039","set","s","enumerable","configurable","$2hYdk","$3tZSl","datalayerSource","data","dataLayerEvent","event","id","name","price","quantity","category","products","items","default","notify","addToCartEvent","sku","toString","unitPrice","parseFloat","parseInt","currency","removeFromCartEvent","transaction_id","transaction_total","value","transactionEvent","total","tax","shipping","city","state","country","map","product","item_id","item_name","item_category","orderId","productId","error"],"version":3,"file":"olla.21fabde1.js.map"}