{"mappings":"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","sources":["<anon>","src/shared/environment-data-sources/shopify.ts"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire07df\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1aFzU\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $5dbcca725d188fe0$export$2e2bcd8739ae039; });\n\nvar $2hYdk = parcelRequire(\"2hYdk\");\nconst $5dbcca725d188fe0$var$shopifyDataSource = ()=>{\n    var _window_Shopify;\n    if (!window.transactionOrder) {\n        var _window_Shopify1;\n        if (!((_window_Shopify1 = window.Shopify) === null || _window_Shopify1 === void 0 ? void 0 : _window_Shopify1.checkout)) return;\n    } else try {\n        var _window, _window1, _transaction_order, _transaction_totalPrice, _transaction_totalTax, _transaction_shippingLine_price, _transaction_shippingLine;\n        const transaction = (_window = window) === null || _window === void 0 ? void 0 : _window.transactionOrder;\n        const products = (_window1 = window) === null || _window1 === void 0 ? void 0 : _window1.transactionItems;\n        (0, $2hYdk.default).notify({\n            transactionEvent: {\n                id: transaction === null || transaction === void 0 ? void 0 : (_transaction_order = transaction.order) === null || _transaction_order === void 0 ? void 0 : _transaction_order.id,\n                total: parseFloat((transaction === null || transaction === void 0 ? void 0 : (_transaction_totalPrice = transaction.totalPrice) === null || _transaction_totalPrice === void 0 ? void 0 : _transaction_totalPrice.amount) || 0),\n                tax: parseFloat((transaction === null || transaction === void 0 ? void 0 : (_transaction_totalTax = transaction.totalTax) === null || _transaction_totalTax === void 0 ? void 0 : _transaction_totalTax.amount) || 0),\n                shipping: parseFloat((transaction === null || transaction === void 0 ? void 0 : (_transaction_shippingLine = transaction.shippingLine) === null || _transaction_shippingLine === void 0 ? void 0 : (_transaction_shippingLine_price = _transaction_shippingLine.price) === null || _transaction_shippingLine_price === void 0 ? void 0 : _transaction_shippingLine_price.amount) || 0),\n                city: \"N/A\",\n                state: \"N/A\",\n                country: \"N/A\",\n                currency: ((transaction === null || transaction === void 0 ? void 0 : transaction.currencyCode) || \"USD\").toString(),\n                items: products === null || products === void 0 ? void 0 : products.map((product)=>{\n                    var _transaction_order;\n                    const productItem = product === null || product === void 0 ? void 0 : product.variant;\n                    return {\n                        orderId: transaction === null || transaction === void 0 ? void 0 : (_transaction_order = transaction.order) === null || _transaction_order === void 0 ? void 0 : _transaction_order.id.toString(),\n                        productId: product === null || product === void 0 ? void 0 : product.id.toString(),\n                        sku: productItem.sku.toString(),\n                        name: productItem.product.title.toString(),\n                        category: \"N/A\",\n                        unitPrice: parseFloat(productItem.price.amount) || 0,\n                        quantity: parseInt(product.quantity) || 1,\n                        currency: ((transaction === null || transaction === void 0 ? void 0 : transaction.currencyCode) || \"USD\").toString()\n                    };\n                })\n            }\n        });\n    } catch (error) {\n    // window.tracker(\"trackError\", JSON.stringify(error), \"SHOPIFY\");\n    }\n    // liquid_total_price is legacy support for old shopify integration\n    if ((_window_Shopify = window.Shopify) === null || _window_Shopify === void 0 ? void 0 : _window_Shopify.checkout) try {\n        const transaction = window.Shopify.checkout;\n        const products = transaction.line_items;\n        const email = transaction.email || \"N/A\";\n        const orderNumber = document.getElementsByClassName(\"os-order-number\")[0][\"innerText\"] || \"\";\n        window.tracker(\"setUserId\", email);\n        (0, $2hYdk.default).notify({\n            transactionEvent: {\n                userId: email,\n                id: `${(transaction.liquid_order_name || transaction.order_id).toString()} ${orderNumber && `- ${orderNumber}`}`,\n                total: parseFloat(transaction.liquid_total_price || transaction.total_price),\n                tax: parseFloat(transaction.total_tax || 0),\n                shipping: parseFloat(transaction.shipping_rate.price || 0),\n                city: (transaction.billing_address.city || \"N/A\").toString(),\n                state: (transaction.billing_address.province || \"N/A\").toString(),\n                country: (transaction.billing_address.country || \"N/A\").toString(),\n                currency: (transaction.currency || \"N/A\").toString(),\n                items: products.map((product)=>{\n                    const { id: id, product_id: product_id, title: title, variant_title: variant_title, price: price, quantity: quantity } = product;\n                    return {\n                        orderId: (transaction.liquid_order_name || transaction.order_id).toString(),\n                        productId: (id || product_id).toString(),\n                        sku: (id || product_id).toString(),\n                        name: (title || \"N/A\").toString(),\n                        category: \"N/A\",\n                        unitPrice: parseFloat(price || 0),\n                        quantity: parseInt(quantity || 1),\n                        currency: (transaction.currency || \"USD\").toString()\n                    };\n                })\n            }\n        });\n    } catch (error) {\n    // window.tracker(\"trackError\", JSON.stringify(error), \"SHOPIFY\");\n    }\n};\nvar $5dbcca725d188fe0$export$2e2bcd8739ae039 = $5dbcca725d188fe0$var$shopifyDataSource;\n\n});\n\n})();\n//# sourceMappingURL=shopify.0180af11.js.map\n","import observable from \"src/shared/utils/create-events-observable\";\n\nimport { TransactionCartItem } from \"../types\";\n\nconst shopifyDataSource = () => {\n  if (!window.transactionOrder) {\n    if (!window.Shopify?.checkout) {\n      return;\n    }\n  } else {\n    try {\n      const transaction = window?.transactionOrder;\n      const products = window?.transactionItems;\n      observable.notify({\n        transactionEvent: {\n          id: transaction?.order?.id,\n          total: parseFloat(transaction?.totalPrice?.amount || 0),\n          tax: parseFloat(transaction?.totalTax?.amount || 0),\n          shipping: parseFloat(transaction?.shippingLine?.price?.amount || 0),\n          city: \"N/A\",\n          state: \"N/A\",\n          country: \"N/A\",\n          currency: (transaction?.currencyCode || \"USD\").toString(),\n          items: products?.map((product: any) => {\n            const productItem = product?.variant;\n            return {\n              orderId: transaction?.order?.id.toString(),\n              productId: product?.id.toString(),\n              sku: productItem.sku.toString(),\n              name: productItem.product.title.toString(),\n              category: \"N/A\", // No Category Field for Shopify in transactionItems\n              unitPrice: parseFloat(productItem.price.amount) || 0,\n              quantity: parseInt(product.quantity) || 1,\n              currency: (transaction?.currencyCode || \"USD\").toString(),\n            } as TransactionCartItem;\n          }),\n        },\n      });\n    } catch (error) {\n      // window.tracker(\"trackError\", JSON.stringify(error), \"SHOPIFY\");\n    }\n  }\n\n  // liquid_total_price is legacy support for old shopify integration\n  if (window.Shopify?.checkout) {\n    try {\n      const transaction = window.Shopify.checkout;\n      const products = transaction.line_items;\n      const email = transaction.email || \"N/A\";\n      const orderNumber = document.getElementsByClassName(\"os-order-number\")[0][\"innerText\"] || \"\";\n\n      window.tracker(\"setUserId\", email);\n\n      observable.notify({\n        transactionEvent: {\n          userId: email,\n          id: `${(transaction.liquid_order_name || transaction.order_id).toString()} ${\n            orderNumber && `- ${orderNumber}`\n          }`,\n          total: parseFloat(transaction.liquid_total_price || transaction.total_price),\n          tax: parseFloat(transaction.total_tax || 0),\n          shipping: parseFloat(transaction.shipping_rate.price || 0),\n          city: (transaction.billing_address.city || \"N/A\").toString(),\n          state: (transaction.billing_address.province || \"N/A\").toString(),\n          country: (transaction.billing_address.country || \"N/A\").toString(),\n          currency: (transaction.currency || \"N/A\").toString(),\n          items: products.map((product: any) => {\n            const { id, product_id, title, variant_title, price, quantity } = product;\n            return {\n              orderId: (transaction.liquid_order_name || transaction.order_id).toString(),\n              productId: (id || product_id).toString(),\n              sku: (id || product_id).toString(),\n              name: (title || \"N/A\").toString(),\n              category: \"N/A\", // No Category Field for Shopify in transactionItems\n              unitPrice: parseFloat(price || 0),\n              quantity: parseInt(quantity || 1),\n              currency: (transaction.currency || \"USD\").toString(),\n            } as TransactionCartItem;\n          }),\n        },\n      });\n    } catch (error) {\n      // window.tracker(\"trackError\", JSON.stringify(error), \"SHOPIFY\");\n    }\n  }\n};\n\nexport default shopifyDataSource;\n"],"names":["parcelRequire","parcelRegister","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","get","$5dbcca725d188fe0$export$2e2bcd8739ae039","set","s","enumerable","configurable","$2hYdk","_window_Shopify","_window_Shopify1","_window","_window1","_transaction_order","_transaction_totalPrice","_transaction_totalTax","_transaction_shippingLine_price","_transaction_shippingLine","transactionOrder","transaction","products","transactionItems","default","notify","transactionEvent","id","order","total","parseFloat","totalPrice","amount","tax","totalTax","shipping","shippingLine","price","city","state","country","currency","currencyCode","toString","items","map","product","productItem","variant","orderId","productId","sku","name","title","category","unitPrice","quantity","parseInt","error","Shopify","checkout","line_items","email","orderNumber","document","getElementsByClassName","tracker","userId","liquid_order_name","order_id","liquid_total_price","total_price","total_tax","shipping_rate","billing_address","province","product_id","variant_title"],"version":3,"file":"shopify.0180af11.js.map"}