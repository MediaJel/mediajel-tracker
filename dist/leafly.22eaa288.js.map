{"mappings":"C,A,W,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,C,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,U,W,O,C,G,I,E,E,S,E,E,S,E,E,SCiDA,EA5CyB,KAEvB,GAAI,CACF,IAAM,EAAkB,AAAC,IACvB,IAAM,EAAa,YAAY,KACzB,OAAO,OAAO,GAChB,IACA,cAAc,GAElB,EAAG,IACL,EAIA,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,EAFiB,CAAC,oDAAqD,4BAA4B,CAE1E,KACvB,GAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAkB,CAClD,IAAM,EAAY,SAAS,aAAa,CAAC,qDACnC,EAAe,SAAS,aAAa,CAAC,6BAE5C,IAAI,EAAK,EAAU,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAC7C,EAAQ,EAAa,WAAW,CAAC,OAAO,CAAC,IAAK,IAElD,EAAgB,KACd,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,MAAM,CAAC,CAChB,iBAAkB,CAChB,GAAI,EAAG,QAAQ,GACf,MAAO,WAAW,IAAU,EAC5B,IAAK,EACL,SAAU,EACV,KAAM,MACN,MAAO,MACP,QAAS,MACT,SAAU,MACV,MAAO,EAAE,AACX,CACF,EACF,EACF,CACF,EACF,CAAE,MAAO,EAAO,CACd,AAAA,CAAA,EAAA,EAAA,OAAK,AAAL,EAAO,IAAI,CAAC,aAAc,KAAK,SAAS,CAAC,GAAQ,SACnD,CACF,C,G,E,Q,S,C,C,C,E,E,E,O,C,iB,W,O,C,GCzCO,IAAM,EAAiB,CAC5B,EACA,EACA,EAAmB,GAAG,CACtB,EAAkB,GAAK,IAEvB,IAAM,EAAY,KAAK,GAAG,GAEpB,EAAS,YAAY,KAML,AALH,EAAU,GAAG,CAAC,AAAC,GAEvB,AAAY,OADH,SAAS,aAAa,CAAC,IAIZ,KAAK,CAAC,UAGjC,cAAc,GACd,KACS,KAAK,GAAG,GAAK,GAAa,GACnC,cAAc,EAGlB,EAAG,EACL,C,E","sources":["<anon>","src/shared/environment-data-sources/leafly.ts","src/shared/sources/utils/poll-for-element.ts"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire07df\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"d7OHU\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $19c9a17eaf2e735f$export$2e2bcd8739ae039; });\n\nvar $lwczO = parcelRequire(\"lwczO\");\n\nvar $2hYdk = parcelRequire(\"2hYdk\");\n\nvar $gI1kx = parcelRequire(\"gI1kx\");\nconst $19c9a17eaf2e735f$var$leaflyDataSource = ()=>{\n    //TODO: Research on identifying per advertiser on leafly\n    try {\n        const isTrackerLoaded = (callback)=>{\n            const intervalId = setInterval(()=>{\n                if (window.tracker) {\n                    callback();\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        const elements = [\n            \"div.jsx-1636262898.content.open p.font-bold.mt-md\",\n            \".price .font-bold.text-md\"\n        ];\n        (0, $gI1kx.pollForElement)(elements, ()=>{\n            if (window.location.href.includes(\"/order-status\")) {\n                const idElement = document.querySelector(\"div.jsx-1636262898.content.open p.font-bold.mt-md\");\n                const totalElement = document.querySelector(\".price .font-bold.text-md\");\n                var id = idElement.textContent.match(/#(\\d+)/)[1];\n                var total = totalElement.textContent.replace(\"$\", \"\");\n                isTrackerLoaded(()=>{\n                    (0, $2hYdk.default).notify({\n                        transactionEvent: {\n                            id: id.toString(),\n                            total: parseFloat(total) || 0,\n                            tax: 0,\n                            shipping: 0,\n                            city: \"N/A\",\n                            state: \"N/A\",\n                            country: \"N/A\",\n                            currency: \"USD\",\n                            items: []\n                        }\n                    });\n                });\n            }\n        });\n    } catch (error) {\n        (0, $lwczO.default).info(\"trackError\", JSON.stringify(error), \"LEAFLY\");\n    }\n};\nvar $19c9a17eaf2e735f$export$2e2bcd8739ae039 = $19c9a17eaf2e735f$var$leaflyDataSource;\n\n});\nparcelRegister(\"gI1kx\", function(module, exports) {\n\n$parcel$export(module.exports, \"pollForElement\", function () { return $fedf0b5b30bf7cb9$export$7c481a487f148c99; });\n/*\n *   Waits for elements to be loaded in the DOM.\n *   It repeatedly checks if all the elements exist in the DOM.\n *   If all elements exist, it clears the interval and executes the provided callback function.\n */ const $fedf0b5b30bf7cb9$export$7c481a487f148c99 = (selectors, callback, interval = 100, timeout = 30000)=>{\n    const startTime = Date.now();\n    const poller = setInterval(()=>{\n        const elements = selectors.map((selector)=>{\n            const element = document.querySelector(selector);\n            return element !== null;\n        });\n        const isAllLoaded = elements.every(Boolean);\n        if (isAllLoaded) {\n            clearInterval(poller);\n            callback();\n        } else if (Date.now() - startTime >= timeout) clearInterval(poller);\n    }, interval);\n};\n\n});\n\n\n})();\n//# sourceMappingURL=leafly.22eaa288.js.map\n","import logger from \"src/shared/logger\";\nimport observable from \"src/shared/utils/create-events-observable\";\n\nimport { pollForElement } from \"../sources/utils/poll-for-element\";\n\nconst leaflyDataSource = () => {\n  //TODO: Research on identifying per advertiser on leafly\n  try {\n    const isTrackerLoaded = (callback) => {\n      const intervalId = setInterval(() => {\n        if (window.tracker) {\n          callback();\n          clearInterval(intervalId);\n        }\n      }, 100);\n    };\n\n    const elements = [\"div.jsx-1636262898.content.open p.font-bold.mt-md\", \".price .font-bold.text-md\"];\n\n    pollForElement(elements, () => {\n      if (window.location.href.includes(\"/order-status\")) {\n        const idElement = document.querySelector(\"div.jsx-1636262898.content.open p.font-bold.mt-md\");\n        const totalElement = document.querySelector(\".price .font-bold.text-md\");\n\n        var id = idElement.textContent.match(/#(\\d+)/)[1];\n        var total = totalElement.textContent.replace(\"$\", \"\");\n\n        isTrackerLoaded(() => {\n          observable.notify({\n            transactionEvent: {\n              id: id.toString(),\n              total: parseFloat(total) || 0,\n              tax: 0,\n              shipping: 0,\n              city: \"N/A\",\n              state: \"N/A\",\n              country: \"N/A\",\n              currency: \"USD\",\n              items: [],\n            },\n          });\n        });\n      }\n    });\n  } catch (error) {\n    logger.info(\"trackError\", JSON.stringify(error), \"LEAFLY\");\n  }\n};\n\nexport default leaflyDataSource;\n","/*\n *   Waits for elements to be loaded in the DOM.\n *   It repeatedly checks if all the elements exist in the DOM.\n *   If all elements exist, it clears the interval and executes the provided callback function.\n */\n\nexport const pollForElement = (\n  selectors: string[],\n  callback: () => void,\n  interval: number = 100,\n  timeout: number = 30000\n): void => {\n  const startTime = Date.now();\n\n  const poller = setInterval(() => {\n    const elements = selectors.map((selector: string) => {\n      const element = document.querySelector(selector);\n      return element !== null;\n    });\n\n    const isAllLoaded = elements.every(Boolean);\n\n    if (isAllLoaded) {\n      clearInterval(poller);\n      callback();\n    } else if (Date.now() - startTime >= timeout) {\n      clearInterval(poller);\n      //console.error(`Timeout reached: elements with selectors \"${selectors.join(\", \")}\" not found.`);\n    }\n  }, interval);\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","$19c9a17eaf2e735f$export$2e2bcd8739ae039","$lwczO","$2hYdk","$gI1kx","isTrackerLoaded","callback","intervalId","setInterval","tracker","clearInterval","pollForElement","location","href","includes","idElement","document","querySelector","totalElement","id","textContent","match","total","replace","default","notify","transactionEvent","toString","parseFloat","tax","shipping","city","state","country","currency","items","error","info","JSON","stringify","$fedf0b5b30bf7cb9$export$7c481a487f148c99","selectors","interval","timeout","startTime","Date","now","poller","elements","map","selector","element","every","Boolean"],"version":3,"file":"leafly.22eaa288.js.map"}