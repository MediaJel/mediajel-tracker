{"mappings":"A,I,E,A,C,E,C,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,iB,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,U,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,G,I,E,E,S,E,E,SC0CA,EArC2B,KACzB,AAAA,CAAA,EAAA,EAAA,gBAAe,AAAf,EAAiB,AAAC,IAChB,IAAM,EAAa,KAAK,KAAK,CAAC,GAE9B,GAAI,GAAc,OAAO,IAAI,CAAC,GAAY,QAAQ,CAAC,UACjD,GAAI,CACF,AAAA,CAAA,EAAA,EAAA,OAAS,AAAT,EAAW,MAAM,CAAC,CAChB,iBAAkB,CAChB,GAAI,EAAW,MAAM,CAAC,EAAE,CAAC,EAAE,EAAI,MAC/B,MAAO,WAAW,EAAW,MAAM,CAAC,EAAE,CAAC,KAAK,GAAK,EACjD,IAAK,WAAW,EAAW,MAAM,CAAC,EAAE,CAAC,KAAK,GAAK,EAC/C,KAAM,MACN,QAAS,MACT,SAAU,MACV,SAAU,EACV,MAAO,MACP,MAAO,EAAW,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,AAAC,IACvC,GAAM,CAAA,KAAE,CAAI,CAAA,SAAE,CAAQ,CAAE,CAAG,EAC3B,MAAO,CACL,QAAS,EAAW,MAAM,CAAC,EAAE,CAAC,GAAM,CAAC,QAAQ,IAAM,EAAW,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,IAAM,MACzF,SAAU,MAAM,QAAQ,GACxB,SAAU,MACV,KAAO,AAAA,CAAA,GAAQ,KAAA,EAAO,QAAQ,GAC9B,SAAU,WAAW,IAAa,EAClC,IAAK,MACL,UAAW,CACb,CACF,EACF,CACF,EACF,CAAE,MAAO,EAAO,CAEhB,CAEJ,EACF,C","sources":["<anon>","src/shared/environment-data-sources/webjoint.ts"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire07df\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"zWg3W\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $44c3c90e14761f4e$export$2e2bcd8739ae039; });\n\nvar $2hYdk = parcelRequire(\"2hYdk\");\n\nvar $kuf8T = parcelRequire(\"kuf8T\");\nconst $44c3c90e14761f4e$var$webjointDataSource = ()=>{\n    (0, $kuf8T.xhrRequestSource)((data)=>{\n        const parsedData = JSON.parse(data);\n        if (parsedData && Object.keys(parsedData).includes(\"orders\")) try {\n            (0, $2hYdk.default).notify({\n                transactionEvent: {\n                    id: parsedData.orders[0].id || \"N/A\",\n                    total: parseFloat(parsedData.orders[0].total) || 0,\n                    tax: parseFloat(parsedData.orders[0].taxes) || 0,\n                    city: \"N/A\",\n                    country: \"USA\",\n                    currency: \"USD\",\n                    shipping: 0,\n                    state: \"N/A\",\n                    items: parsedData.orders[0].details.map((item)=>{\n                        const { name: name, quantity: quantity } = item;\n                        return {\n                            orderId: parsedData.orders[0][\"_id\"].toString() || parsedData.orders[0].id.toString() || \"N/A\",\n                            category: \"N/A\".toString(),\n                            currency: \"USD\",\n                            name: (name || \"N/A\").toString(),\n                            quantity: parseFloat(quantity) || 1,\n                            sku: \"N/A\",\n                            unitPrice: 0\n                        };\n                    })\n                }\n            });\n        } catch (error) {\n        // window.tracker(\"trackError\", JSON.stringify(error), \"WEBJOINT\");\n        }\n    });\n};\nvar $44c3c90e14761f4e$export$2e2bcd8739ae039 = $44c3c90e14761f4e$var$webjointDataSource;\n\n});\n\n})();\n//# sourceMappingURL=webjoint.02608fbb.js.map\n","import observable from \"src/shared/utils/create-events-observable\";\n\nimport { xhrRequestSource } from \"../sources/xhr-request-source\";\nimport { TransactionCartItem } from \"../types\";\n\nconst webjointDataSource = () => {\n  xhrRequestSource((data: any): void => {\n    const parsedData = JSON.parse(data);\n\n    if (parsedData && Object.keys(parsedData).includes(\"orders\")) {\n      try {\n        observable.notify({\n          transactionEvent: {\n            id: parsedData.orders[0].id || \"N/A\",\n            total: parseFloat(parsedData.orders[0].total) || 0,\n            tax: parseFloat(parsedData.orders[0].taxes) || 0,\n            city: \"N/A\",\n            country: \"USA\",\n            currency: \"USD\",\n            shipping: 0,\n            state: \"N/A\",\n            items: parsedData.orders[0].details.map((item: any) => {\n              const { name, quantity } = item;\n              return {\n                orderId: parsedData.orders[0][\"_id\"].toString() || parsedData.orders[0].id.toString() || \"N/A\",\n                category: \"N/A\".toString(),\n                currency: \"USD\",\n                name: (name || \"N/A\").toString(),\n                quantity: parseFloat(quantity) || 1,\n                sku: \"N/A\",\n                unitPrice: 0,\n              } as TransactionCartItem;\n            }),\n          },\n        });\n      } catch (error) {\n        // window.tracker(\"trackError\", JSON.stringify(error), \"WEBJOINT\");\n      }\n    }\n  });\n};\n\nexport default webjointDataSource;\n"],"names":["parcelRequire","parcelRegister","$parcel$global","globalThis","self","window","global","register","module","exports","Object","defineProperty","get","$44c3c90e14761f4e$export$2e2bcd8739ae039","set","s","enumerable","configurable","$2hYdk","$kuf8T","xhrRequestSource","data","parsedData","JSON","parse","keys","includes","default","notify","transactionEvent","id","orders","total","parseFloat","tax","taxes","city","country","currency","shipping","state","items","details","map","item","name","quantity","orderId","toString","category","sku","unitPrice","error"],"version":3,"file":"webjoint.02608fbb.js.map"}