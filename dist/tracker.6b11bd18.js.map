{"mappings":"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","sources":["<anon>","src/shared/snowplow/v1/tracker.ts","src/shared/snowplow/v1/init.ts","node_modules/@parcel/runtime-js/lib/runtime-bb83c42456a7fc32.js","node_modules/@parcel/runtime-js/lib/runtime-524c91d626b3c066.js"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequire07df\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"a7EfY\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $765d763c6697a523$export$2e2bcd8739ae039; });\n\nvar $fcWbB = parcelRequire(\"fcWbB\");\n\n\nconst $765d763c6697a523$var$createSnowplowV1Tracker = async (input)=>{\n    // We only load the impressions handler if the event is an impression\n    const loadImpressionHandler = async ()=>{\n        return await (parcelRequire(\"dtrGp\")).then(({ default: load })=>load());\n    };\n    const loadEcommerceHandler = async ()=>{\n        return await (parcelRequire(\"lJHI1\")).then(({ default: load })=>load(input));\n    };\n    return {\n        context: input,\n        initialize: $fcWbB.initialize,\n        // Load ecommerce handler only if the event is a transaction or if no event is specified\n        ecommerce: (input.event === \"transaction\" || !input.event) && await loadEcommerceHandler(),\n        impressions: input.event === \"impression\" && await loadImpressionHandler(),\n        trackSignup: (input)=>{\n            const { uuid: uuid, firstName: firstName, lastName: lastName, gender: gender, emailAddress: emailAddress, hashedEmailAddress: hashedEmailAddress, address: address, city: city, state: state, phoneNumber: phoneNumber, advertiser: advertiser } = input;\n            window.tracker(\"trackSelfDescribingEvent\", {\n                schema: \"iglu:com.mediajel.events/sign_up/jsonschema/1-0-2\",\n                data: {\n                    uuid: uuid,\n                    firstName: firstName,\n                    lastName: lastName,\n                    gender: gender,\n                    emailAddress: emailAddress,\n                    hashedEmailAddress: hashedEmailAddress,\n                    address: address,\n                    city: city,\n                    state: state,\n                    phoneNumber: phoneNumber,\n                    advertiser: advertiser\n                }\n            });\n        },\n        record: (input)=>{\n            window.tracker(\"trackSelfDescribingEvent\", {\n                schema: \"iglu:com.mediajel.events/record/jsonschema/1-0-2\",\n                data: input\n            });\n        }\n    };\n};\nvar $765d763c6697a523$export$2e2bcd8739ae039 = $765d763c6697a523$var$createSnowplowV1Tracker;\n\n});\nparcelRegister(\"fcWbB\", function(module, exports) {\n\n$parcel$export(module.exports, \"initialize\", function () { return $f1bc8133b7a10e7f$export$2a47f398eeff8b01; });\nconst $f1bc8133b7a10e7f$export$2a47f398eeff8b01 = ({ appId: appId, collector: collector, event: event })=>{\n    // Loading tracker with the snowplow tag by fetching our sp.js file\n    // Creates a global function called \"tracker\" which we use to access the Snowplow Tracker\n    (function(e, o, n, t, a, c, i) {\n        if (!e[a]) {\n            e.GlobalSnowplowNamespace = e.GlobalSnowplowNamespace || [];\n            e.GlobalSnowplowNamespace.push(a);\n            e[a] = function() {\n                (e[a].q = e[a].q || []).push(arguments);\n            };\n            e[a].q = e[a].q || [];\n            c = o.createElement(n);\n            i = o.getElementsByTagName(n)[0];\n            c.async = 1;\n            c.src = t;\n            i.parentNode.insertBefore(c, i);\n        }\n    })(window, document, \"script\", \"//dm2q9qfzyjfox.cloudfront.net/sp.js\", \"tracker\");\n    // Creates the tracker with the appId and sends events to collector url\n    window.tracker(\"newTracker\", appId, `${collector}`, {\n        appId: appId,\n        postPath: \"/analytics/track\",\n        discoverRootDomain: true,\n        stateStorageStrategy: \"cookieAndLocalStorage\",\n        cookieSameSite: \"Lax\",\n        respectDoNotTrack: false,\n        eventMethod: \"post\"\n    });\n    window.tracker(\"enableActivityTracking\", 30, 10);\n    window.tracker(\"trackPageView\");\n    window.tracker(\"enableFormTracking\");\n    /**\n   * !IMPORTANT: We are disabling this as to not override Link click config for the impression pixel.\n   * Enabling this for impressions will cause click tracking to break\n   */ if (event !== \"impression\") window.tracker(\"enableLinkClickTracking\");\n};\n\n});\n\nparcelRegister(\"dtrGp\", function(module, exports) {\n\n\nmodule.exports = (parcelRequire(\"aiXW3\"))((parcelRequire(\"7SZEv\")).resolve(\"cJt3G\")).then(()=>parcelRequire(\"5AUYO\"));\n\n});\n\nparcelRegister(\"lJHI1\", function(module, exports) {\n\n\nmodule.exports = (parcelRequire(\"aiXW3\"))((parcelRequire(\"7SZEv\")).resolve(\"41h2r\")).then(()=>parcelRequire(\"bLsGx\"));\n\n});\n\n\n})();\n//# sourceMappingURL=tracker.6b11bd18.js.map\n","import { CreateSnowplowTrackerInput, SnowplowTracker } from 'src/shared/snowplow/types';\nimport { initialize } from 'src/shared/snowplow/v1/init';\n\nconst createSnowplowV1Tracker = async (input: CreateSnowplowTrackerInput): Promise<SnowplowTracker> => {\n  // We only load the impressions handler if the event is an impression\n  const loadImpressionHandler = async () => {\n    return await import(`src/shared/snowplow/v1/impressions`).then(({ default: load }) => load());\n  };\n\n  const loadEcommerceHandler = async () => {\n    return await import(`src/shared/snowplow/v1/ecommerce`).then(({ default: load }) => load(input));\n  };\n\n\n  return {\n    context: input,\n    initialize,\n    // Load ecommerce handler only if the event is a transaction or if no event is specified\n    ecommerce: (input.event === \"transaction\" || !input.event) && (await loadEcommerceHandler()),\n    impressions: input.event === \"impression\" && (await loadImpressionHandler()),\n    trackSignup: (input) => {\n      const {\n        uuid,\n        firstName,\n        lastName,\n        gender,\n        emailAddress,\n        hashedEmailAddress,\n        address,\n        city,\n        state,\n        phoneNumber,\n        advertiser,\n      } = input;\n\n      window.tracker(\"trackSelfDescribingEvent\", {\n        schema: \"iglu:com.mediajel.events/sign_up/jsonschema/1-0-2\",\n        data: {\n          uuid,\n          firstName,\n          lastName,\n          gender,\n          emailAddress,\n          hashedEmailAddress,\n          address,\n          city,\n          state,\n          phoneNumber,\n          advertiser,\n        },\n      });\n    },\n    record: (input) => {\n      window.tracker(\"trackSelfDescribingEvent\", {\n        schema: \"iglu:com.mediajel.events/record/jsonschema/1-0-2\",\n        data: input,\n      });\n    },\n  };\n};\n\nexport default createSnowplowV1Tracker;\n","import { CreateSnowplowTrackerInput } from \"src/shared/snowplow/types\";\n\nexport const initialize = ({ appId, collector, event }: CreateSnowplowTrackerInput) => {\n  // Loading tracker with the snowplow tag by fetching our sp.js file\n  // Creates a global function called \"tracker\" which we use to access the Snowplow Tracker\n  (function (e, o, n, t, a, c, i) {\n    if (!e[a]) {\n      e.GlobalSnowplowNamespace = e.GlobalSnowplowNamespace || [];\n      e.GlobalSnowplowNamespace.push(a);\n      e[a] = function () {\n        (e[a].q = e[a].q || []).push(arguments);\n      };\n      e[a].q = e[a].q || [];\n      c = o.createElement(n);\n      i = o.getElementsByTagName(n)[0];\n      c.async = 1;\n      c.src = t;\n      i.parentNode.insertBefore(c, i);\n    }\n  })(window, document, \"script\", \"//dm2q9qfzyjfox.cloudfront.net/sp.js\", \"tracker\");\n\n  // Creates the tracker with the appId and sends events to collector url\n  window.tracker(\"newTracker\", appId, `${collector}`, {\n    appId: appId,\n    postPath: \"/analytics/track\",\n    discoverRootDomain: true,\n    stateStorageStrategy: \"cookieAndLocalStorage\",\n    cookieSameSite: \"Lax\",\n    respectDoNotTrack: false,\n    eventMethod: \"post\",\n  });\n\n  window.tracker(\"enableActivityTracking\", 30, 10);\n  window.tracker(\"trackPageView\");\n  window.tracker(\"enableFormTracking\");\n\n  /**\n   * !IMPORTANT: We are disabling this as to not override Link click config for the impression pixel.\n   * Enabling this for impressions will cause click tracking to break\n   */\n  if (event !== \"impression\") {\n    window.tracker(\"enableLinkClickTracking\");\n  }\n};\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-manifest').resolve(\"cJt3G\"))).then(() => parcelRequire('5AUYO'));","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-manifest').resolve(\"41h2r\"))).then(() => parcelRequire('bLsGx'));"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","$765d763c6697a523$export$2e2bcd8739ae039","$fcWbB","input","loadImpressionHandler","then","default","load","loadEcommerceHandler","context","initialize","ecommerce","event","impressions","trackSignup","uuid","firstName","lastName","gender","emailAddress","hashedEmailAddress","address","city","state","phoneNumber","advertiser","tracker","schema","data","record","$f1bc8133b7a10e7f$export$2a47f398eeff8b01","appId","collector","o","t","a","c","i","document","GlobalSnowplowNamespace","push","q","arguments","createElement","getElementsByTagName","async","src","parentNode","insertBefore","postPath","discoverRootDomain","stateStorageStrategy","cookieSameSite","respectDoNotTrack","eventMethod","resolve"],"version":3,"file":"tracker.6b11bd18.js.map"}