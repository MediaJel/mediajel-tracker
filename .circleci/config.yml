# Note that the following stanza uses CircleCI 2.1 to make use of a Reusable Executor
# This allows defining a docker image to reuse across jobs.
# visit https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-executors to learn more.

version: 2.1

executors:
  the-executor:
    docker:
      - image: cimg/node:22.11.0
    working_directory: ~/mediajel-tracker

orbs:
  aws-cli: circleci/aws-cli@4.0
  aws-s3: circleci/aws-s3@2.0.0
  aws-cloudfront: topmonks/aws-cloudfront@1.0.0
jobs:
  build-staging:
    executor: the-executor
    steps:
      - checkout
      - run:
          name: Install project dependencies
          command: yarn install
      - run:
          name: type checking
          command: yarn tsc --noEmit
        #   TODO: UNCOMMENT LATER
      # - run:
      #     name: Cypress Install
      #     command: sudo apt-get update && sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      # - run:
      #     name: cypress tests
      #     command: npm run test
      - run:
          name: Build
          command: npm run deploy
      - aws-cli/install:
          version: latest
      - run:
          name: Sync to S3
          command: |
            aws s3 sync dist/ s3://mediajel-tracker-staging
      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation --distribution-id E1ZEPT1NM5152K --paths "/*"

  build-main:
    executor: the-executor
    steps:
      - checkout
      - run:
          name: Install project dependencies
          command: yarn install
  
      - run:
          name: type checking
          command: yarn tsc --noEmit
      # - run:
      #     name: Cypress Install
      #     command: sudo apt-get update && sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      # - run:
      #     name: cypress tests
      #     command: npm run test
      - run:
          name: Build
          command: yarn deploy
      - aws-cli/install:
          version: latest
      - run:
          name: Sync to S3
          command: |
            aws s3 sync dist/ s3://mediajel-tracker-production
      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation --distribution-id E3NZWAOF5B6J2O --paths "/*"
      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation --distribution-id E3FT67SI37G1ZH --paths "/*"
      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation --distribution-id EQGTP3X7S8LMI --paths "/*"
      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation --distribution-id EFJHMMZDNURYT --paths "/*"
      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation --distribution-id E39XLCEMWS6VO1 --paths "/*"
      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation --distribution-id E270PRY60O4B3Y --paths "/*"
      - run:
          name: Invalidate CloudFront
          command: |
            aws cloudfront create-invalidation --distribution-id ELFZ8CP0408WK --paths "/*"
      - run:
          name: Run Tracker
          command: npm run tracker:generate-environments

workflows:
  version: 2
  build:
    jobs:
      - build-staging:
          context: STAGING
          filters:
            branches:
              only: staging
      - build-main:
          context: PRODUCTION
          filters:
            branches:
              only: main
